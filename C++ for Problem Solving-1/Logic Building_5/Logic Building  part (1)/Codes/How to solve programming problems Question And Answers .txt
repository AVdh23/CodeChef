How to solve programming problems
Prev module
Next problem
In the previous modules - we solved simple programming problems that had a direct approach.
In this module, we will cover problems that focus on logic building. Some suggestions for this module:

Use a pen and paper to work out solutions.
The logic / algorithm first has to be clear in your mind before you decide to code it out.
Don't spend more than 30 minutes on any problem. While the objective is to learn - if you don't know the approach, it's best to learn the concept / review the solution.
For Beginner's level programming problems - we think the following works best

Step 1: Understand the problem statement and the sample test cases
Step 2: Generate examples - Create 10 input and output cases of your own
Step 3: Observations / Pattern - Observe your examples to identify the logic
Step 4: Plan your code - Modularise and solve sub-components of your problem
Step 5: Learn - You may come across components of you logic where you don't know how to execute the code.
In such cases, ask Google or ChatGPT or your friends and learn!
Step 6: Write the code - For simpler programming problems - C++ solutions will be less than 20 lines in more than 95% of the cases.
Step 7: Identify edge cases - If your code still fails - try and and come up with corner cases where your code may fail
Click on Next to continue.


//Click on Next to continue.


Introduction to the module on logic building
Prev problem
Next problem
In the problems that follow, this is the approach that we will take
Step 1: Understand the problem statement - You need to read carefully and understand the same
Step 2: Generate examples - Create additional input and output cases for each problem
Step 3: Draw observations / pattern based on the examples created
Step 4: Solve sub-components of the problem
Step 5: Solve the complete problem.

Let us start with our first logic building exercise!!! Click on Next to continue.


//Click on Next to continue.


Problem (Make Avg) - Read the problem statement
Prev problem
Next problem
You are given 2 integers - 
 
A and 
 
C.
You need to find if there exists any 
 
 
 
 
 
 
 
integer 
 
B which meets the following condition

 
B must be an integer
 
B is the average of 
 
A and 
 
C.
For each test case, output 
 
B. If no such integer exists, output 
−
1
−1.

Sample 1:
Input
Output
3
3 5
6 6
2 7
4
6
-1
Explanation:
Test case 
1
1: Considering 
 
=
4
B=4, 
 
B is the average of 
3
3 and 
5
5.
Test case 
2
2: Considering 
 
=
6
B=6, 
 
B is the average of 
6
6 and 
6
6.
Test case 
3
3: There exists no integer 
 
B such that 
 
B can be the average of 
2
2 and 
7
7.
Average of 
2
2 and 
7
7 is 
4.5
4.5 which is not an integer.

//Step 1: Read and understand the problem statement and sample test cases

// Click on 'Next' once you are ready to proceed.
#include <bits/stdc++.h>
using namespace as std;
int main()
{
    int A,C;
    int B=0;
    cin>>B;
    while(B--){
        cin>>A>>C;
        B=(A+C)/2;
        if(B%2==0){
            cout<<B<<endl;
        }else{
            cout<<"-1"<<endl;
        }
    }
}



Problem (Make Avg) - Generate examples
Prev problem
Now that we have understood the problem statement, let us write down a few more sample cases or examples. Review the sample input / output given in the table below (In section "Sample 1").

What would expected output be for the following values of 
 
A and 
 
C?
Generate the expected output in the IDE to continue.

3 4
3 5
2 4
2 5
Sample 1:
Input
Output
6 inputs as follows
1 1
1 2
1 3
1 4
2 2
2 3
6 outputs as follows 
1
-1
2
-1
2
-1


// Update the '_' in the code below with the expected output

#include <bits/stdc++.h>
using namespace std;

int main() 
{
 cout<<"For A = 3 and C = 4, the output is "<<-1<<endl;

 cout<<"For A = 3 and C = 5, the output is "<< 4<<endl;

 cout<<"For A = 2 and C = 4, the output is "<< 3<<endl;

 cout<<"For A = 2 and C = 5, the output is "<< -1<<endl;

return 0;
}




Problem (Make Avg) - Observations
Prev problem
Next problem
What do we observe here?

Whenever we can generate 
 
B, then 
 
B is the 
 
 
 
 
 
 
 
average of 
 
A and 
 
C
If 
 
A and 
 
C are both odd, then we can generate 
 
B.
If 
 
A and 
 
C are both even, then we can generate 
 
B
When can we not generate 
 
B?
If 
 
A is odd and 
 
C is even - or vice versa, then we cannot generate 
 
B and the output is 
−
1
−1
Why is this the case?

Average of 
 
A and 
 
C is 
 
+
 
2
2
A+C
​
 .
 
+
 
2
2
A+C
​
  will be an integer when 
 
+
 
A+C is even. Else, it will not be an integer.
Even + Even is Even.
Odd + Odd is Even.
Even + Odd is Odd.
Hence, the average exists only when either both 
 
A and 
 
C are Even, or both Odd.
Sample 1:
Input
Output
3 4
3 5
2 4
2 5
-1
4
3
-1


